version: '3.8'

services:
  web:
    build:
      context: ../..
      dockerfile: deployment/configs/Dockerfile
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - db
      - redis
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@db:5432/${PGDATABASE}
      - REDIS_URL=redis://redis:6379/0
      - SESSION_SECRET=${SESSION_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_JWT=${SUPABASE_JWT}
      - GIS_API_KEY=${GIS_API_KEY}
    volumes:
      - static_data:/app/static
      - instance_data:/app/instance
    networks:
      - geoassessment_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgis/postgis:13-3.1
    restart: always
    environment:
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
      - POSTGRES_DB=${PGDATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - geoassessment_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER} -d ${PGDATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - geoassessment_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional Nginx service for production
  nginx:
    image: nginx:1.21-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_data:/usr/share/nginx/html/static
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - geoassessment_network

volumes:
  postgres_data:
  redis_data:
  static_data:
  instance_data:

networks:
  geoassessment_network:
    driver: bridge