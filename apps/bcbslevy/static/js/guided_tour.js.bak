/**
 * Guided Tour System for Levy Calculation System
 * 
 * This file contains functions for creating and managing guided tours of the application
 * using IntroJS. Tours help users learn how to use different features of the system.
 */

// Tour configurations for different pages
const tourConfigs = {
  // Dashboard tour
  dashboard: [
    {
      element: '.navbar',
      intro: 'Welcome to the Levy Calculation System! This navigation bar allows you to access all features of the application.',
      position: 'bottom'
    },
    {
      element: '.dashboard-stats',
      intro: 'These cards show key metrics about your tax districts, codes, and properties.',
      position: 'bottom'
    },
    {
      element: '.recent-activity',
      intro: 'Here you can see your recent activity, such as data imports and exports.',
      position: 'left'
    },
    {
      element: '.quick-actions',
      intro: 'Use these buttons to quickly access common tasks.',
      position: 'top'
    }
  ],
  
  // Levy calculator tour
  levyCalculator: [
    {
      element: '.calculator-section',
      intro: 'Welcome to the Levy Calculator! This tool helps you calculate property tax levy rates based on assessed values and requested levy amounts.',
      position: 'right'
    },
    {
      element: '#taxDistrict',
      intro: 'Start by selecting a tax district for your calculation.',
      position: 'bottom'
    },
    {
      element: '#levyAmount',
      intro: 'Enter the total levy amount requested by the district.',
      position: 'bottom'
    },
    {
      element: '#calculateBtn',
      intro: 'Click this button to calculate the levy rate based on your inputs.',
      position: 'bottom'
    },
    {
      element: '#forecastForm',
      intro: 'After calculating a levy, you can use this section to forecast next year\'s levy based on assessed value changes and new construction.',
      position: 'left'
    },
    {
      element: '#helpAccordion',
      intro: 'Need help? Check out these resources to learn more about levy calculations and statutory limits.',
      position: 'left'
    }
  ],
  
  // Import data tour
  importData: [
    {
      element: '.import-form',
      intro: 'This is the Data Import tool. Use it to import tax district, tax code, and property data.',
      position: 'bottom'
    },
    {
      element: '.file-selector',
      intro: 'Select the file you want to import. We support TXT, XLS, XLSX, and XML formats.',
      position: 'right'
    },
    {
      element: '.import-type-selector',
      intro: 'Choose the type of data you are importing.',
      position: 'right'
    },
    {
      element: '.year-selector',
      intro: 'Specify the tax year for the imported data.',
      position: 'left'
    },
    {
      element: '.import-button',
      intro: 'Click here to start the import process.',
      position: 'top'
    },
    {
      element: '.import-history',
      intro: 'You can view your past imports here to track success and error rates.',
      position: 'top'
    }
  ],
  
  // Property search tour
  propertySearch: [
    {
      element: '.search-form',
      intro: 'This is the Property Search tool. Use it to find specific properties in the database.',
      position: 'bottom'
    },
    {
      element: '.search-filters',
      intro: 'Use these filters to narrow down your search.',
      position: 'right'
    },
    {
      element: '.search-button',
      intro: 'Click here to perform the search based on your criteria.',
      position: 'top'
    },
    {
      element: '.search-results',
      intro: 'Your search results will appear here, showing property details and tax information.',
      position: 'top'
    }
  ]
};

/**
 * Initialize a tour for a specific feature
 * @param {string} tourName - Name of the tour to start
 */
function startTour(tourName) {
  console.log(`Starting ${tourName} tour`);
  
  // Check if tour exists
  if (!tourConfigs[tourName]) {
    console.error(`Tour configuration not found for: ${tourName}`);
    return;
  }
  
  try {
    // Initialize IntroJS
    const tour = introJs();
    
    // Configure the tour
    tour.setOptions({
      steps: tourConfigs[tourName],
      showProgress: true,
      showBullets: false,
      showStepNumbers: false,
      hideNext: false,
      hidePrev: false,
      disableInteraction: false,
      exitOnOverlayClick: true,
      scrollToElement: true,
      doneLabel: 'Finish',
      nextLabel: 'Next →',
      prevLabel: '← Back',
      tooltipClass: 'levy-tour-tooltip',
      highlightClass: 'levy-tour-highlight'
    });
    
    // Start the tour
    tour.start();
    
    // Listen for tour events
    tour.oncomplete(function() {
      console.log(`${tourName} tour completed`);
      // Save completion to localStorage to avoid showing again
      localStorage.setItem(`tour_${tourName}_completed`, 'true');
    });
    
    tour.onexit(function() {
      console.log(`${tourName} tour exited`);
    });
    
  } catch (error) {
    console.error('Error starting tour:', error);
  }
}

/**
 * Check if a specific page should show a tour automatically
 * based on the current page and user preferences
 */
function checkAutoTour() {
  // Get current page path
  const path = window.location.pathname;
  
  // Check different paths and show relevant tours for first-time visitors
  if (path === '/dashboard' || path === '/') {
    if (!localStorage.getItem('tour_dashboard_completed')) {
      startTour('dashboard');
    }
  } else if (path === '/levy-calculator') {
    if (!localStorage.getItem('tour_levyCalculator_completed')) {
      startTour('levyCalculator');
    }
  } else if (path === '/import') {
    if (!localStorage.getItem('tour_importData_completed')) {
      startTour('importData');
    }
  } else if (path === '/properties/search') {
    if (!localStorage.getItem('tour_propertySearch_completed')) {
      startTour('propertySearch');
    }
  }
}

// Initialize the tour system when document is ready
document.addEventListener('DOMContentLoaded', function() {
  // Check for auto-tour based on current page
  if (localStorage.getItem('enable_auto_tours') !== 'false') {
    checkAutoTour();
  }
  
  // Add click handlers for tour trigger elements
  document.querySelectorAll('[data-tour]').forEach(element => {
    element.addEventListener('click', function(e) {
      e.preventDefault();
      const tourName = this.getAttribute('data-tour');
      startTour(tourName);
    });
  });
});