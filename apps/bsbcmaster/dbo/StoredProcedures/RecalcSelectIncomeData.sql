
create procedure RecalcSelectIncomeData
	@lPacsUserID bigint,
	@lPropID int,
	@lYear numeric(4,0),
	@lSupNum int
as

	select
		i.income_id,
		convert(smallint, i.income_yr),
		convert(smallint, i.sup_num),

		gba,
		nra,
		tax,
		convert(
			bit,
			case override_gba
				when 'T' then 1
				else 0
			end
		),
		dc_la,
		dc_va,
		dc_be,
		dc_or,
		dc_vr,
		dc_larate,
		dc_varate,
		dc_li,
		dc_vi,
		dc_gpi,
		dc_gpivr,
		dc_gpivi,
		dc_gpiclr,
		dc_gpicli,
		dc_gpirer,
		dc_gpire,
		dc_gpisir,
		dc_gpisi,
		dc_egi,
		dc_expoei,
		dc_mgmtr,
		dc_mgmti,
		dc_rrr,
		dc_rri,
		dc_tir,
		dc_tii,
		dc_lcr,
		dc_lci,
		dc_exp,
		dc_noi,
		dc_capr,
		dc_capi,
		dc_pers,
		dc_ind,
		dc_gpirsf,
		dc_gpivrsf,
		dc_gpiclrsf,
		dc_gpirersf,
		dc_gpisirsf,
		dc_egirsf,
		dc_egipctrev,
		dc_expoersf,
		dc_exptaxrsf,
		dc_expmgmtrsf,
		dc_rrrsf,

		dc_exptirsf,
		dc_explcrsf,
		dc_exprsf,
		dc_exppctrev,
		dc_noirsf,
		dc_noipctrev,
		sch_la,
		sch_va,
		sch_be,
		sch_or,
		sch_vr,
		sch_larate,
		sch_varate,
		sch_li,
		sch_vi,
		sch_gpi,
		sch_gpivr,
		sch_gpivi,
		sch_gpiclr,
		sch_gpicli,
		isnull(sch_gpirer, 0),
		sch_gpire,
		sch_gpisir,
		sch_gpisi,
		sch_egi,
		sch_expoei,
		sch_mgmtr,
		sch_mgmti,
		sch_rrr,
		sch_rri,
		sch_tir,
		sch_tii,
		sch_lcr,
		sch_lci,
		sch_exp,
		sch_noi,
		sch_capr,
		sch_capi,
		sch_pers,
		sch_ind,
		sch_gpirsf,
		sch_gpivrsf,
		sch_gpiclrsf,
		sch_gpirersf,
		sch_gpisirsf,
		sch_egirsf,
		sch_egipctrev,
		sch_expoersf,
		sch_exptaxrsf,
		sch_expmgmtrsf,
		sch_rrrsf,
		sch_exptirsf,
		sch_explcrsf,
		sch_exprsf,
		sch_exppctrev,
		sch_noirsf,
		sch_noipctrev,
		pf_la,
		pf_va,
		pf_be,
		pf_or,
		pf_vr,
		pf_larate,
		pf_varate,
		pf_li,
		pf_vi,
		pf_gpi,
		pf_gpivr,
		pf_gpivi,
		pf_gpiclr,
		pf_gpicli,
		pf_gpirer,
		pf_gpire,
		pf_gpisir,
		pf_gpisi,
		pf_egi,
		pf_expoei,
		pf_mgmtr,
		pf_mgmti,
		pf_rrr,
		pf_rri,
		pf_tir,
		pf_tii,
		pf_lcr,
		pf_lci,
		pf_exp,
		pf_noi,
		pf_capr,
		pf_capi,
		pf_pers,
		pf_ind,
		pf_gpirsf,
		pf_gpivrsf,
		pf_gpiclrsf,
		pf_gpirersf,
		pf_gpisirsf,
		pf_egirsf,
		pf_egipctrev,
		pf_expoersf,
		pf_exptaxrsf,
		pf_expmgmtrsf,
		pf_rrrsf,
		pf_exptirsf,
		pf_explcrsf,
		pf_exprsf,
		pf_exppctrev,
		pf_noirsf,
		pf_noipctrev,
		pf_input_ocr,
		pf_input_mgmtr,
		pf_input_exp_rsf,
		pf_input_si_rsf,
		pf_input_tir,
		pf_input_rrr,
		pf_input_capr,
		pf_input_lease_rsf,
		pf_input_varate,
		pf_input_clr,
		pf_input_rer,
		pf_input_lcr,
		flat_value,
		upper(isnull(econ_area,'')),
		upper(isnull(prop_type_cd,'')),
		upper(isnull(class,'')),
		upper(isnull(level_cd,'')),
		value_method,
		dc_tax,
		sch_tax,
		pf_tax,
		convert(
			bit,
			case override_dc_tax
				when 'T' then 1
				else 0
			end
		),
		convert(
			bit,
			case override_sch_tax
				when 'T' then 1
				else 0
			end
		),
		convert(
			bit,
			case override_pf_tax
				when 'T' then 1
				else 0
			end
		),
		land_ratio,
		land_ratio_typical,
		land_rsf,
		land_size,
		land_excess_value,
		isnull(lu_rent_loss_area, 0),
		isnull(lu_rent_sf, 0),
		isnull(lu_rent_num_year, 0),
		isnull(lu_rent_total, 0),
		isnull(lu_lease_pct, 0),
		isnull(lu_lease_total, 0),
		isnull(lu_tfo_sf, 0),
		isnull(lu_tfo_total, 0),
		isnull(lu_disc_rate, 0),
		isnull(lu_num_year, 0),
		isnull(lu_cost, 0),
		convert(
			bit,
			case lu_override_cost
				when 'T' then 1
				else 0
			end
		),
		dc_ind_rsf,
		sch_ind_rsf,
		pf_ind_rsf,

		dc_ocr_rsf,
		sch_ocr_rsf,
		pf_ocr_rsf,
		dc_ind_runit,
		sch_ind_runit,
		pf_ind_runit,
		dc_ocr_runit,
		sch_ocr_runit,
		pf_ocr_runit,
		num_units,
		convert(
			bit,
			case override_num_units
				when 'T' then 1
				else 0
			end
		),
		
		schil_grid_static,
		schil_personal_property_value,
		schil_other_value,
		
		non_income_land_value,
		other_land_value,
		schil_indicated_land_value,
		non_income_imprv_value,
		non_income_land_imps_value,
		schil_indicated_imprv_value,
		schil_method_value,
		num_designated_units,
		gba_designated_units,
		schil_base_indicated_value,
		schil_indicated_value,
		sch_other_value,
		pf_other_value,
		dc_other_value,
		DC_indicated_imprv_value,
		SCH_indicated_imprv_value,
		PF_indicated_imprv_value,
		expense_structure_cd,
		rent_type_cd

	from #recalc_worktable_income_id_assoc as t with(nolock)
	join income as i with(nolock) on
		t.income_yr = i.income_yr and
		t.sup_num = i.sup_num and
		t.income_id = i.income_id
	order by
		1 asc, 2 asc, 3 asc
	option(keep plan)

	return( @@rowcount )

GO

